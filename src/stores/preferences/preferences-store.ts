/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: stores/preferences/preferences-store.ts
 - Purpose: Module preferences-store.ts supporting application features.
 - Context: Supports a feature area and composes with adjacent modules.
 - How it works: Provides supporting logic composed by higher-level modules.
 - External imports: zustand/vanilla
 - Local imports: @/types/preferences/theme
 - Refactoring ideas: Align with module boundaries and update tests accordingly.
 - Security considerations: Follow least-privilege and avoid leaking implementation details.
*/
import { createStore } from "zustand/vanilla";

import type { ThemeMode, ThemePreset } from "@/types/preferences/theme";

export type PreferencesState = {
  themeMode: ThemeMode;
  themePreset: ThemePreset;
  setThemeMode: (mode: ThemeMode) => void;
  setThemePreset: (preset: ThemePreset) => void;
};

export const createPreferencesStore = (init?: Partial<PreferencesState>) =>
  createStore<PreferencesState>()((set) => ({
    themeMode: init?.themeMode ?? "light",
    themePreset: init?.themePreset ?? "default",
    setThemeMode: (mode) => set({ themeMode: mode }),
    setThemePreset: (preset) => set({ themePreset: preset }),
  }));
