/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: hooks/use-mobile.ts
 - Purpose: Custom React hook use-mobile.
 - Context: Encapsulates reusable view or data-fetching logic.
 - How it works: Abstracts stateful logic and effects behind a stable API for components.
 - External imports: react
 - Refactoring ideas: Stabilize dependencies and memoize returned values. | Expose minimal surface area with clear naming.
 - Security considerations: Prevent accidental exposure of secrets to the client side.
*/
import * as React from "react";

const MOBILE_BREAKPOINT = 768;

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined);

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    };
    mql.addEventListener("change", onChange);
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT);
    return () => mql.removeEventListener("change", onChange);
  }, []);

  return !!isMobile;
}
