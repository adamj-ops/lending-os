/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: types/forecast 2.ts
 - Purpose: Shared TypeScript types and interfaces.
 - Context: Ensures type safety across modules and features.
 - How it works: Provides shared data contracts to prevent type drift across modules.
 - Refactoring ideas: Prefer discriminated unions over stringly-typed fields. | Use readonly where mutation is not intended.
 - Security considerations: Mark sensitive fields and avoid accidental serialization.
*/
export interface ForecastInput {
  principal: number;
  rate: number;
  termMonths: number;
  category: "asset_backed" | "yield_note" | "hybrid";
  borrowerCreditScore?: number;
  loanToValue?: number;
}

export interface ForecastOutput {
  roiPct: number;
  defaultProb: number;
  efficiency: number;
  recommendedFunding?: "bank" | "escrow" | "internal";
  riskLevel?: "low" | "medium" | "high";
}

