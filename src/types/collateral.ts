/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: types/collateral.ts
 - Purpose: Shared TypeScript types and interfaces.
 - Context: Ensures type safety across modules and features.
 - How it works: Provides shared data contracts to prevent type drift across modules.
 - Refactoring ideas: Prefer discriminated unions over stringly-typed fields. | Use readonly where mutation is not intended.
 - Security considerations: Mark sensitive fields and avoid accidental serialization.
*/
export type LienPosition = "1st" | "2nd" | "subordinate";

export interface DrawScheduleItem {
  n: number;
  amount: number;
  note?: string;
}

export interface Collateral {
  id: string;
  loanId: string;
  lienPosition: LienPosition | null;
  description: string | null;
  drawSchedule: DrawScheduleItem[] | null;
  createdAt: Date;
  updatedAt: Date;
}

export interface CreateCollateralDTO {
  loanId: string;
  lienPosition?: LienPosition;
  description?: string;
  drawSchedule?: DrawScheduleItem[];
}

export interface UpdateCollateralDTO {
  lienPosition?: LienPosition;
  description?: string;
  drawSchedule?: DrawScheduleItem[];
}

