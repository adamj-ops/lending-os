/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: types/loan-document.ts
 - Purpose: Shared TypeScript types and interfaces.
 - Context: Ensures type safety across modules and features.
 - How it works: Provides shared data contracts to prevent type drift across modules.
 - Refactoring ideas: Prefer discriminated unions over stringly-typed fields. | Use readonly where mutation is not intended.
 - Security considerations: Mark sensitive fields and avoid accidental serialization.
*/
export enum LoanDocumentType {
  APPLICATION = "application",
  APPRAISAL = "appraisal",
  TITLE = "title",
  INSURANCE = "insurance",
  CLOSING_DOCS = "closing_docs",
  OTHER = "other",
}

export interface LoanDocument {
  id: string;
  loanId: string;
  documentType: LoanDocumentType;
  fileName: string;
  fileUrl: string;
  fileSize: string | null;
  uploadedBy: string | null;
  uploadedAt: Date;
}

export interface CreateLoanDocumentDTO {
  loanId: string;
  documentType: LoanDocumentType;
  fileName: string;
  fileUrl: string;
  fileSize?: string;
  uploadedBy?: string;
}

