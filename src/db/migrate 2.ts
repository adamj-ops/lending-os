/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: db/migrate 2.ts
 - Purpose: Database utilities, clients, and scripts.
 - Context: Defines and interacts with the persistence layer.
 - How it works: Initializes DB clients and runs maintenance scripts (migrate/seed/clear).
 - External imports: dotenv, drizzle-orm/postgres-js, drizzle-orm/postgres-js/migrator, postgres
 - Refactoring ideas: Add indexes for frequent query paths. | Enforce constraints at the schema level. | Document migration rationale and rollback plans.
 - Security considerations: Constrain data with not-null and foreign keys. | Protect PII with encryption at rest where needed.
*/
import { config } from "dotenv";
import { drizzle } from "drizzle-orm/postgres-js";
import { migrate } from "drizzle-orm/postgres-js/migrator";
import postgres from "postgres";

// Load environment variables from .env.local
config({ path: ".env.local" });

async function runMigrations() {
  if (!process.env.DATABASE_URL) {
    throw new Error("DATABASE_URL environment variable is not set");
  }

  console.log("üîÑ Running database migrations...");

  const connection = postgres(process.env.DATABASE_URL, { max: 1 });
  const db = drizzle(connection);

  try {
    await migrate(db, { migrationsFolder: "./src/db/migrations" });
    console.log("‚úÖ Migrations completed successfully");
  } catch (error) {
    console.error("‚ùå Migration failed:", error);
    process.exit(1);
  } finally {
    await connection.end();
  }
}

runMigrations();

