/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: app/api/auth/logout/route.ts
 - Purpose: HTTP route handlers for auth/logout (App Router API).
 - Context: Exposes server-side endpoints consumed by UI and external clients.
 - How it works: Exports HTTP method handlers (e.g., GET/POST) that validate input, call services, and return structured JSON responses. Uses: Next.js App Router.
 - External imports: next/server
 - Local imports: @/lib/session
 - Refactoring ideas: Centralize input validation schemas and response helpers. | Enforce consistent error typing and status codes. | Consider rate limiting and per-user quotas.
 - Security considerations: Validate and sanitize all inputs; enforce authorization checks. | Avoid leaking sensitive fields in responses. | Consider rate limiting and audit logging.
*/
import { NextResponse } from "next/server";
import { getSession } from "@/lib/session";

export async function POST() {
  try {
    const session = await getSession();
    session.destroy();

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error("Logout error:", error);
    return NextResponse.json(
      { error: "Internal server error" },
      { status: 500 }
    );
  }
}

