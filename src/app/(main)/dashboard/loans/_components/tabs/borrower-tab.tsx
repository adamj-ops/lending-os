"use client";

/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: app/(main)/dashboard/loans/_components/tabs/borrower-tab.tsx
 - Purpose: Module borrower-tab.tsx supporting application features.
 - Context: Supports a feature area and composes with adjacent modules.
 - How it works: Provides supporting logic composed by higher-level modules. Uses: React Client Component, Next.js App Router.
 - External imports: lucide-react, next/link
 - Local imports: @/components/ui/card, @/components/ui/button, @/components/ui/badge, @/types/loan
 - Refactoring ideas: Align with module boundaries and update tests accordingly.
 - Security considerations: Follow least-privilege and avoid leaking implementation details.
*/
import { ExternalLink, User, Mail, Phone, Building2, TrendingUp } from "lucide-react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import type { LoanWithRelations } from "@/types/loan";
import Link from "next/link";

interface BorrowerTabProps {
  loan: LoanWithRelations;
}

export function BorrowerTab({ loan }: BorrowerTabProps) {
  if (!loan.borrower) {
    return (
      <div className="flex h-64 flex-col items-center justify-center">
        <User className="mb-4 size-12 text-muted-foreground" />
        <p className="text-lg font-medium">No Borrower Assigned</p>
        <p className="text-sm text-muted-foreground">
          This loan does not have an associated borrower yet.
        </p>
        <Button variant="outline" className="mt-4">
          Assign Borrower
        </Button>
      </div>
    );
  }

  const { borrower } = loan;

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader className="flex flex-row items-center justify-between">
          <CardTitle>Borrower Information</CardTitle>
          <Button variant="outline" size="sm" asChild>
            <Link href={`/dashboard/borrowers/${borrower.id}`}>
              <ExternalLink className="mr-2 size-4" />
              View Full Profile
            </Link>
          </Button>
        </CardHeader>
        <CardContent className="grid gap-4 md:grid-cols-2">
          <div>
            <div className="flex items-start gap-2">
              <User className="mt-1 size-4 text-muted-foreground" />
              <div>
                <p className="text-sm font-medium text-muted-foreground">Name</p>
                <p className="mt-1 text-lg font-semibold">
                  {borrower.firstName} {borrower.lastName}
                </p>
              </div>
            </div>
          </div>

          <div>
            <div className="flex items-start gap-2">
              <Mail className="mt-1 size-4 text-muted-foreground" />
              <div>
                <p className="text-sm font-medium text-muted-foreground">Email</p>
                <p className="mt-1">{borrower.email}</p>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}

