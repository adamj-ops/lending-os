/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: app/layout.tsx
 - Purpose: Next.js layout wrapper for a route subtree.
 - Context: Participates in the app router hierarchy for end-user navigation.
 - How it works: Wraps child routes, providing shared UI (headers, navigation) and context providers.
 - External imports: react, next
 - Local imports: @/components/ui/sonner, @/config/app-config, @/server/server-actions, @/stores/preferences/preferences-provider, @/providers/query-client-provider, @/types/preferences/theme
 - Refactoring ideas: Align with module boundaries and update tests accordingly.
 - Security considerations: Follow least-privilege and avoid leaking implementation details.
*/
import { ReactNode } from "react";

import type { Metadata } from "next";
import "@fontsource/open-sans/300.css";
import "@fontsource/open-sans/400.css";
import "@fontsource/open-sans/500.css";
import "@fontsource/open-sans/600.css";
import "@fontsource/open-sans/700.css";
import "@fontsource/geist-mono/400.css";
import "@fontsource/geist-mono/500.css";
import "@fontsource/geist-mono/600.css";

import { Toaster } from "@/components/ui/sonner";
import { APP_CONFIG } from "@/config/app-config";
import { getPreference } from "@/server/server-actions";
import { PreferencesStoreProvider } from "@/stores/preferences/preferences-provider";
import { ReactQueryProvider } from "@/providers/query-client-provider";
import { THEME_MODE_VALUES, THEME_PRESET_VALUES, type ThemePreset, type ThemeMode } from "@/types/preferences/theme";

import "./globals.css";

export const metadata: Metadata = {
  title: APP_CONFIG.meta.title,
  description: APP_CONFIG.meta.description,
};

export default async function RootLayout({ children }: Readonly<{ children: ReactNode }>) {
  const themeMode = await getPreference<ThemeMode>("theme_mode", THEME_MODE_VALUES, "light");
  const themePreset = await getPreference<ThemePreset>("theme_preset", THEME_PRESET_VALUES, "default");

  return (
    <html
      lang="en"
      className={themeMode === "dark" ? "dark" : ""}
      data-theme-preset={themePreset}
      suppressHydrationWarning
    >
      <body className="min-h-screen antialiased">
        <ReactQueryProvider>
          <PreferencesStoreProvider themeMode={themeMode} themePreset={themePreset}>
            {children}
            <Toaster />
          </PreferencesStoreProvider>
        </ReactQueryProvider>
      </body>
    </html>
  );
}
