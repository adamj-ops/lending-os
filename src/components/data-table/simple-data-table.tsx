"use client";

/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: components/data-table/simple-data-table.tsx
 - Purpose: Reusable React UI component simple-data-table.tsx.
 - Context: Composes UI from smaller primitives and domain data.
 - How it works: Renders UI based on props and context; defers side effects to hooks. Uses: React Client Component.
 - External imports: @tanstack/react-table
 - Local imports: @/hooks/use-data-table-instance, ./data-table
 - Refactoring ideas: Split complex components into smaller units. | Memoize expensive subtrees and handlers. | Extract data fetching into hooks/services.
 - Security considerations: Avoid dangerouslySetInnerHTML; sanitize any HTML content. | Do not embed secrets or tokens in client code. | Harden forms against CSRF where applicable.
*/
import { ColumnDef } from "@tanstack/react-table";
import { useDataTableInstance } from "@/hooks/use-data-table-instance";
import { DataTable } from "./data-table";

interface SimpleDataTableProps<TData, TValue> {
  columns: ColumnDef<TData, TValue>[];
  data: TData[];
}

export function SimpleDataTable<TData, TValue>({ columns, data }: SimpleDataTableProps<TData, TValue>) {
  const table = useDataTableInstance({ data, columns });

  return <DataTable table={table} columns={columns} />;
}

