"use client"

/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: components/ui/label.tsx
 - Purpose: Reusable React UI component label.tsx.
 - Context: Composes UI from smaller primitives and domain data.
 - How it works: Renders UI based on props and context; defers side effects to hooks. Uses: React Client Component.
 - External imports: react, @radix-ui/react-label
 - Local imports: @/lib/utils
 - Refactoring ideas: Split complex components into smaller units. | Memoize expensive subtrees and handlers. | Extract data fetching into hooks/services.
 - Security considerations: Avoid dangerouslySetInnerHTML; sanitize any HTML content. | Do not embed secrets or tokens in client code. | Harden forms against CSRF where applicable.
*/
import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"

import { cn } from "@/lib/utils"

function Label({
  className,
  ...props
}: React.ComponentProps<typeof LabelPrimitive.Root>) {
  return (
    <LabelPrimitive.Root
      data-slot="label"
      className={cn(
        "flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
        className
      )}
      {...props}
    />
  )
}

export { Label }
