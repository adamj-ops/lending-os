"use client";

/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: components/simple-icon.tsx
 - Purpose: Reusable React UI component simple-icon.tsx.
 - Context: Composes UI from smaller primitives and domain data.
 - How it works: Renders UI based on props and context; defers side effects to hooks. Uses: React Client Component.
 - External imports: react, simple-icons
 - Local imports: @/lib/utils
 - Refactoring ideas: Split complex components into smaller units. | Memoize expensive subtrees and handlers. | Extract data fetching into hooks/services.
 - Security considerations: Avoid dangerouslySetInnerHTML; sanitize any HTML content. | Do not embed secrets or tokens in client code. | Harden forms against CSRF where applicable.
*/
import * as React from "react";

import type { SimpleIcon } from "simple-icons";

import { cn } from "@/lib/utils";

type SimpleIconProps = {
  icon: SimpleIcon;
  className?: string;
} & React.SVGProps<SVGSVGElement>;

export function SimpleIcon({ icon, className, ...props }: SimpleIconProps) {
  const { title, path } = icon;

  return (
    <svg
      viewBox="0 0 24 24"
      aria-label={title}
      aria-hidden="false"
      focusable="false"
      className={cn("fill-foreground size-5", className)}
      {...props}
    >
      <title>{title}</title>
      <path d={path} />
    </svg>
  );
}
