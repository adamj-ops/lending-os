"use client";

/*
 File Header (auto-generated by scripts/add-file-headers.ts)
 - File: providers/query-client-provider.tsx
 - Purpose: React provider for shared app context/state.
 - Context: Supplies shared state and configuration to component trees.
 - How it works: Initializes shared state and exposes it via React context to descendants. Uses: React Client Component, TanStack Query.
 - External imports: @tanstack/react-query, react
 - Refactoring ideas: Scope providers narrowly to reduce re-renders. | Ensure values are memoized to avoid churn.
 - Security considerations: Scope sensitive data carefully; avoid passing secrets via context.
*/
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactNode, useState } from "react";

export function ReactQueryProvider({ children }: { children: ReactNode }) {
  const [queryClient] = useState(
    () =>
      new QueryClient({
        defaultOptions: {
          queries: {
            staleTime: 60 * 1000, // 1 minute
            refetchOnWindowFocus: false,
          },
        },
      })
  );

  return <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>;
}
